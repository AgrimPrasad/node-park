name: express-generator app
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: ./src
    steps:
    # Checks-out your git repo under $GITHUB_WORKSPACE directory on the test VM,
    # so your workflow can access it.
    - uses: actions/checkout@v2

    # Downloads and caches node version 10.x
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    # Installs dependencies in the local node_modules directory
    # Note that we are running all commands relative to the ./src workingdirectory
    - run: npm install
      working-directory: ${{ env.WORKING_DIRECTORY }}

    # Runs tests for the current version of the code
    - run: npm test
      working-directory: ${{ env.WORKING_DIRECTORY }}

    # Build and tag local image (needs Dockerfile)
    - run: docker build --tag node-park .
      working-directory: ${{ env.WORKING_DIRECTORY }}

    # Login to Github Docker Registry using your github username
    # and dynamically generated secret token
    - run: |
        docker login docker.pkg.github.com --username $GITHUB_ACTOR --password ${{ secrets.GITHUB_TOKEN }}

    # Then run "docker tag" which configures the "docker push"
    # command to push the image to a specific location.
    # This target tag is generated from the source tag in "docker build"
    - run: |
        docker tag node-park docker.pkg.github.com/agrimprasad/repo/node-park:latest
      working-directory: ${{ env.WORKING_DIRECTORY }}

    # Push the docker image tagged above to the github packages registry after successful login
    - run: docker push docker.pkg.github.com/agrimprasad/repo/node-park:latest
      working-directory: ${{ env.WORKING_DIRECTORY }}
